{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoodsList","selectGoods","item","setState","push","removeGood","splice","indexOf","getGoodsString","resultString","length","join","slice","Error","clearSelectedGoodsList","this","className","type","onClick","map","good","includes","React","Component","ReactDOM","render","document","getElementById"],"mappings":"8OAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOWC,EAAb,4MACEC,MAAe,CACbC,kBAAmB,CAAC,QAFxB,EAKEC,YAAc,SAACC,GACb,EAAKC,UAAS,SAACJ,GAGb,OAFAA,EAAMC,kBAAkBI,KAAKF,GAEtB,CAAEF,kBAAmBD,EAAMC,uBATxC,EAaEK,WAAa,SAACH,GACZ,EAAKC,UAAS,SAACJ,GAGb,OAFAA,EAAMC,kBAAkBM,OAAOP,EAAMC,kBAAkBO,QAAQL,GAAO,GAE/D,CAAEF,kBAAmBD,EAAMC,uBAjBxC,EAqBEQ,eAAiB,WACf,IAAQR,EAAsB,EAAKD,MAA3BC,kBACJS,EAAe,GAEnB,QAAQ,GACN,KAAmC,IAA7BT,EAAkBU,OACtBD,EAAe,yCACf,MACF,KAAmC,IAA7BT,EAAkBU,OACtBD,EAAY,UAAMT,EAAkB,GAAxB,gBACZ,MACF,KAAmC,IAA7BA,EAAkBU,OACtBD,EAAY,UAAMT,EAAkBW,KAAK,SAA7B,iBACZ,MACF,KAAmC,KAA7BX,EAAkBU,OACtBD,EAAY,UAAM,CAACT,EAAkBY,MAAM,GAAI,GAAGD,KAAK,MACrDX,EAAkBY,OAAO,IACzBD,KAAK,SAFK,yCAGZ,MACF,KAAMX,EAAkBU,OAAS,EAC/BD,EAAY,UAAM,CAACT,EAAkBY,MAAM,GAAI,GAAGD,KAAK,MACrDX,EAAkBY,OAAO,IACzBD,KAAK,SAFK,iBAGZ,MACF,QACE,MAAM,IAAIE,MAAM,2BAGpB,OAAOJ,GAjDX,EAoDEK,uBAAyB,WACvB,EAAKX,SAAS,CAAEH,kBAAmB,MArDvC,4CAwDE,WAAU,IAAD,OACCA,EAAsBe,KAAKhB,MAA3BC,kBAER,OACE,sBAAKgB,UAAU,OAAf,UACE,sBAAKA,UAAU,MAAf,UACE,oBAAIA,UAAU,aAAd,SAA4BD,KAAKP,mBAE9BR,EAAkBU,OAAS,GAC1B,wBACEO,KAAK,SACLD,UAAU,cACVE,QAAS,WACP,EAAKJ,0BAJT,kBAaN,oBAAIE,UAAU,YAAd,SACGnB,EAAgBsB,KAAI,SAAAC,GAAI,OACvB,oBAEEJ,UAAS,4BACPhB,EAAkBqB,SAASD,GACvB,UACA,IALR,SAQE,wBAAOJ,UAAU,aAAjB,UACE,+BAAOI,IACP,wBACEH,KAAK,SACLD,UAAU,SACVE,QACElB,EAAkBqB,SAASD,GACvB,kBAAM,EAAKf,WAAWe,IACtB,kBAAM,EAAKnB,YAAYmB,IAN/B,SASGpB,EAAkBqB,SAASD,GAAQ,IAAM,UAlBzCA,eAjFnB,GAAyBE,IAAMC,WCjB/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.2213bd2f.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ninterface State {\n  selectedGoodsList: string[],\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    selectedGoodsList: ['Jam'],\n  };\n\n  selectGoods = (item: string) => {\n    this.setState((state: State) => {\n      state.selectedGoodsList.push(item);\n\n      return { selectedGoodsList: state.selectedGoodsList };\n    });\n  };\n\n  removeGood = (item: string) => {\n    this.setState((state: State) => {\n      state.selectedGoodsList.splice(state.selectedGoodsList.indexOf(item), 1);\n\n      return { selectedGoodsList: state.selectedGoodsList };\n    });\n  };\n\n  getGoodsString = (): string => {\n    const { selectedGoodsList } = this.state;\n    let resultString = '';\n\n    switch (true) {\n      case (selectedGoodsList.length === 0):\n        resultString = 'No goods selected. Choose one or more:';\n        break;\n      case (selectedGoodsList.length === 1):\n        resultString = `${selectedGoodsList[0]} is selected`;\n        break;\n      case (selectedGoodsList.length === 2):\n        resultString = `${selectedGoodsList.join(' and ')} are selected`;\n        break;\n      case (selectedGoodsList.length === 10):\n        resultString = `${[selectedGoodsList.slice(0, -1).join(', '),\n          selectedGoodsList.slice(-1),\n        ].join(' and ')} are selected. Nothing else to choose`;\n        break;\n      case (selectedGoodsList.length > 2):\n        resultString = `${[selectedGoodsList.slice(0, -1).join(', '),\n          selectedGoodsList.slice(-1),\n        ].join(' and ')} are selected`;\n        break;\n      default:\n        throw new Error('Ups... something wrong!');\n    }\n\n    return resultString;\n  };\n\n  clearSelectedGoodsList = () => {\n    this.setState({ selectedGoodsList: [] });\n  };\n\n  render() {\n    const { selectedGoodsList } = this.state;\n\n    return (\n      <div className=\"Page\">\n        <div className=\"App\">\n          <h1 className=\"App__title\">{this.getGoodsString()}</h1>\n          {\n            (selectedGoodsList.length > 0) && (\n              <button\n                type=\"button\"\n                className=\"App__button\"\n                onClick={() => {\n                  this.clearSelectedGoodsList();\n                }}\n              >\n                X\n              </button>\n            )\n          }\n        </div>\n\n        <ul className=\"App__list\">\n          {goodsFromServer.map(good => (\n            <li\n              key={good}\n              className={`App__list-element ${\n                selectedGoodsList.includes(good)\n                  ? 'isActiv'\n                  : ''\n              }`}\n            >\n              <label className=\"App__label\">\n                <span>{good}</span>\n                <button\n                  type=\"button\"\n                  className=\"Button\"\n                  onClick={\n                    selectedGoodsList.includes(good)\n                      ? () => this.removeGood(good)\n                      : () => this.selectGoods(good)\n                  }\n                >\n                  {selectedGoodsList.includes(good) ? '-' : '+'}\n                </button>\n              </label>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}